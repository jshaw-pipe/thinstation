#/etc/profile: system-wide .profile file for ash.

trap "" INT QUIT TSTP
. /etc/thinstation.global
umask 022

if [ "`tty`" == "$CONSOLE" ]; then
	. /etc/splash.functions
	if [ -e $WKDIR/consoleapps ]; then
		show_cursor
		splash_exit
		exec $WKDIR/consoleapps
	elif [ -e /bin/xinit ] && [ -e $WKDIR/windowapps ]; then
		if check_last_session; then
			cd /run
			clear
			splash_exit
			exec /bin/xinit /etc/xinitrc -- /etc/xserverrc > $APPLOGDIR/session.$$ 2>&1
		elif is_disabled $HALTONERROR; then
			chvt 1
			echo "The system was not able to go graphical. This could indicate a problem with missing kernel modules or Xorg drivers."
			echo ""
		else
                        show_cursor
                        exec $NO_XORG_CMD
		fi
	fi
	splash_exit
	chvt 1
	if ! is_disabled $FASTBOOT && ! mountpoint /lib; then
		echo "Fastboot was enabled, but something went wrong with the transfer or mount."
		echo "Hopefully only Administrators ever see this message, and then only when they fail. :)"
		echo "Review the log at /var/log/fastboot.log"
		if [ "$LM"="2" ] && ! mountpoint /boot; then
			if ! module_available vfat; then
				echo "syslinux: vfat module not available"
			else
				echo "syslinux: /boot was not mounted, maybe check your mount declarations"
			fi
		elif [ "$LM"="3" ] && ! pkg_initialized autonet; then
			if pkg_is_loaded networkmanager; then
				echo "pxelinux: Package networkmager does not work with this technology, try autonet"
			else
				echo "pxelinux: Package autonet not available"
			fi
		elif [ "$LM"="4" ] && ! mountpoint /mnt/cdrom0; then
			if ! module_available isofs && ! module_available udf; then
				echo "isolinux: No CD Rom modules available"
			else
				echo "isolinux: /mnt/cdrom0 was not mounted, maybe"
				echo "isolinux: /mnt/cdrom0 was not mounted, maybe check your mount declarations"
			fi
		elif [ -z "$LM" ]; then
			echo "Fastboot enabled, but no loader method was defined, what are you doing?"
		fi
	else
		echo "There are no autostarted sessions!"
	fi
	echo ""
	show_cursor
        if is_disabled $HALTONERROR; then
		echo "Dropping to shell."
		echo ""
	else
		echo "Full Stop."
		halt
	fi
fi
trap - INT QUIT TSTP
